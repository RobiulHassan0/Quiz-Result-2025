function loadOverallResults() {
    const overallContainer = document.getElementById('overall-data-container');
    const top3Container = document.getElementById('top-3-container');
    
    if (typeof SHEET_ID === 'undefined' || typeof API_KEY === 'undefined' || typeof SHEET_NAME === 'undefined') {
        overallContainer.innerHTML = '<p style="color:red;">Error: API Configuration (config.js) is missing or incorrectly loaded.</p>';
        return;
    }

    overallContainer.innerHTML = '<p>‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...</p>';
    top3Container.innerHTML = '';

    const encodedRange = encodeURIComponent(SHEET_NAME) + '!' + API_RANGE;
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodedRange}?key=${API_KEY}`;

    fetch(url)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP Error! Status: ${response.status}. ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ API Key ‡¶ï‡¶®‡¶´‡¶ø‡¶ó‡¶æ‡¶∞‡ßá‡¶∂‡¶® ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®‡•§`);
            }
            return response.json();
        })
        .then(data => {
            const rows = data.values;
            if (!rows || rows.length <= 1) {
                overallContainer.innerHTML = "<p>‡¶∏‡¶¨‡¶æ‡¶∞ ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶∏‡¶Æ‡ßç‡¶≠‡¶¨ ‡¶π‡ßü‡¶®‡¶ø‡•§ ‡¶∂‡¶ø‡¶ü‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶°‡ßá‡¶ü‡¶æ ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø‡•§</p>";
                return;
            }

            // --- ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶π‡ßá‡¶°‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶®‡¶æ‡¶Æ ---
            let html = "<table class='results-table'>";
            html += "<thead><tr>";
            html += `<th>‡¶ï‡ßç‡¶∞‡¶Æ‡¶ø‡¶ï</th>`; 
            html += `<th>‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ</th>`;
            html += `<th>‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶Ø‡ßã‡¶ó‡ßÄ‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∑‡ßç‡¶†‡¶æ‡¶®</th>`;
            html += `<th>‡¶™‡ßç‡¶∞‡¶æ‡¶™‡ßç‡¶§ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞</th>`;
            html += "</tr></thead><tbody>";

            // --- ‡¶°‡ßá‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ---
            let participants = [];
            for (let i = 1; i < rows.length; i++) {
                const row = rows[i];
                participants.push({
                    index: i,
                    name: row[3] || '‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶á',
                    university: row[4] || '‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡¶®‡¶ø',
                    score: row[2] || '‡ß¶ / ‡ß¶',
                });
            }

            // --- ‡¶∏‡ßç‡¶ï‡ßã‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá ‡¶ü‡¶™ ‡ß© ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ---
            let top3 = [...participants].sort((a, b) => {
                let scoreA = parseInt(a.score) || 0;
                let scoreB = parseInt(b.score) || 0;
                return scoreB - scoreA;
            }).slice(0, 3);

            // --- ‡¶ü‡¶™ ‡ß© ‡¶ï‡¶æ‡¶∞‡ßç‡¶° UI ---
            top3Container.innerHTML = `
                <div class="top-3-wrapper">
                    <div class="winner-card second">
                        <div class="medal">ü•à</div>
                        <img src="https://png.pngtree.com/png-vector/20230305/ourmid/pngtree-muslim-girl-cartoon-with-niqab-vector-png-image_6633291.png" alt="2nd place">
                        <h2>${top3[1]?.name}</h2>
                        <p>${top3[1]?.university}</p>
                        <span>${top3[1]?.score}</span>
                    </div>
                    <div class="winner-card first">
                        <div class="medal">ü•á</div>
                        <img src="https://img.freepik.com/vektor-premium/avatar-pria-muslim-memberikan-ilustrasi-jempol-ke-atas_591903-650.jpg" alt="1st place">
                        <h2>${top3[0]?.name}</h2>
                        <p>${top3[0]?.university}</p>
                        <span>${top3[0]?.score}</span>
                    </div>
                    <div class="winner-card third">
                        <div class="medal">ü•â</div>
                        <img src="https://img.freepik.com/premium-vector/professional-male-muslim-cartoon-character-with-colour-gradient-background_1138840-2612.jpg" alt="3rd place">
                        <h2>${top3[2]?.name}</h2>
                        <p>${top3[2]?.university}</p>
                        <span>${top3[2]?.score}</span>
                    </div>
                </div>
            `;

            // --- ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ index ---
            const disqualifiedIndexes = [4, 10, 16, 18, 27, 28];

            // --- ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡¶æ‡¶∞‡¶ø ---
            participants.forEach(p => {
                let rowClass = '';

                if (disqualifiedIndexes.includes(p.index)) {
                    rowClass = 'disqualified';
                }
                else if (
                    p.name === top3[0]?.name || 
                    p.name === top3[1]?.name || 
                    p.name === top3[2]?.name
                ) {
                    rowClass = 'winner';
                }

                html += `<tr class="${rowClass}">`;
                html += `<td>${p.index}</td>`;
                html += `<td>${p.name}</td>`;
                html += `<td>${p.university}</td>`;
                html += `<td>${p.score}</td>`;
                html += `</tr>`;
            });

            html += "</tbody></table>";

            // --- ‡¶ü‡ßÄ‡¶ï‡¶æ (Legend) ---
            html += `
                <div class="legend">
                    <p><span class="legend-box winner-box"></span> ‡¶∏‡¶¨‡ßÅ‡¶ú = ‡¶¨‡¶ø‡¶ú‡ßü‡ßÄ</p>
                    <p><span class="legend-box disqualified-box"></span> ‡¶≤‡¶æ‡¶≤ = ‡¶¨‡¶æ‡¶§‡¶ø‡¶≤ ‡¶Ö‡¶Ç‡¶∂‡¶ó‡ßç‡¶∞‡¶π‡¶£</p>
                </div>
            `;

            overallContainer.innerHTML = html;
        })
        .catch(error => {
            console.error("Error loading overall data:", error);
            overallContainer.innerHTML = `<p style="color: red;">‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá: ${error.message}</p>`;
        });
}

document.addEventListener('DOMContentLoaded', () => {
    setTimeout(loadOverallResults, 100); 
});
