function fetchPersonalResult() {
    // ржЗржиржкрзБржЯ ржлрж┐рж▓рзНржб ржерзЗржХрзЗ ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржжрзЗржУржпрж╝рж╛ ржорж╛ржиржЯрж┐ рж╕ржВржЧрзНрж░рж╣ ржХрж░рж╛
    const participantId = document.getElementById('participantId').value.trim(); 
    const personalContainer = document.getElementById('personal-data-container');

    // ... (ржкрзВрж░рзНржмрзЗрж░ ржЖржЗржбрж┐ ржПржмржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЪрзЗржХрж┐ржВ ржХрзЛржб ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд ржерж╛ржХржмрзЗ)
    if (!participantId || typeof SHEET_ID === 'undefined' || typeof API_KEY === 'undefined') {
        personalContainer.innerHTML = '<p style="color: orange;">ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж╛рж░ ржирж╛ржо ржмрж╛ ржлрзЛржи ржиржорзНржмрж░ ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи ржПржмржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЪрзЗржХ ржХрж░рзБржиред</p>';
        return;
    }
    personalContainer.innerHTML = '<p>ржлрж▓рж╛ржлрж▓ ржЦрзЛржБржЬрж╛ рж╣ржЪрзНржЫрзЗ...</p>';
    
    // URL рждрзИрж░рж┐
    const encodedRange = encodeURIComponent(SHEET_NAME) + '!' + API_RANGE;
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodedRange}?key=${API_KEY}`;
    
    fetch(url)
        .then(response => response.json())
        .then(data => {
            const allRows = data.values;
            if (!allRows || allRows.length <= 1) {
                personalContainer.innerHTML = "<p>ржХрзЛржирзЛ ржбрзЗржЯрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред</p>";
                return;
            }
            
            const header = allRows[0];
            
            // --- ржПржЗ ржЕржВрж╢ржЯрж┐ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ ---
            
            // ржЧрзБржЧрж▓ рж╢рж┐ржЯрзЗрж░ ржХрж▓рж╛ржо ржЗржиржбрзЗржХрзНрж╕ (0-ржнрж┐рждрзНрждрж┐ржХ)
            const nameColumnIndex = 3;   // D ржХрж▓рж╛ржо: "ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи"
            const phoneColumnIndex = 5;  // F ржХрж▓рж╛ржо: "ржЖржкржирж╛рж░ ржлрзЛржи ржиржорзНржмрж░"
            
            // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржирж╛ржо ржмрж╛ ржлрзЛржи ржиржорзНржмрж░ ржжрж┐ржпрж╝рзЗ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛
            const userRow = allRows.find((row, index) => {
                // рж╣рзЗржбрж╛рж░ рж╕рж╛рж░рж┐ ржмрж╛ржж ржжрж┐рждрзЗ рж╣ржмрзЗ
                if (index === 0) return false; 
                
                // ржЗржиржкрзБржЯ ржорж╛ржиржЯрж┐ржХрзЗ ржЫрзЛржЯ рж╣рж╛рждрзЗрж░ ржЕржХрзНрж╖рж░рзЗ ржПржмржВ ржЕрждрж┐рж░рж┐ржХрзНржд рж╕рзНржкрзЗрж╕ ржмрж╛ржж ржжрзЗржУржпрж╝рж╛
                const searchId = participantId.toLowerCase();
                
                // рзз. ржирж╛ржо ржХрж▓рж╛ржорзЗ ржЦрзЛржБржЬрж╛
                const nameMatch = (row[nameColumnIndex] || '').trim().toLowerCase() === searchId;
                
                // рзи. ржлрзЛржи ржиржорзНржмрж░ ржХрж▓рж╛ржорзЗ ржЦрзЛржБржЬрж╛ (ржлрзЛржи ржиржорзНржмрж░рзЗ рж╕рзНржкрзЗрж╕ ржмрж╛ рж╣рж╛ржЗржлрзЗржи ржерж╛ржХрж▓рзЗ рждрж╛ ржмрж╛ржж ржжрж┐рждрзЗ рж╣ржмрзЗ)
                const phoneMatch = (row[phoneColumnIndex] || '').replace(/[^0-9]/g, '').trim() === participantId.replace(/[^0-9]/g, '').trim(); 
                
                return nameMatch || phoneMatch; // ржирж╛ржо ржЕржержмрж╛ ржлрзЛржи ржиржорзНржмрж░рзЗрж░ ржпрзЗржХрзЛржирзЛ ржПржХржЯрж┐рж░ рж╕рж╛ржерзЗ ржорж┐рж▓рж▓рзЗ рж╣ржмрзЗ
            });

            // --- ржкрж░рж┐ржмрж░рзНрждржи рж╢рзЗрж╖ ---
            
            if (userRow) {
                let html = '<h3>ржЖржкржирж╛рж░ ржлрж▓рж╛ржлрж▓ ржУ ржЙрждрзНрждрж░ржкрждрзНрж░ ЁЯУД</h3><ul class="personal-details-list">';
                
                // рж╕ржорж╕рзНржд ржХрж▓рж╛ржо ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржмрзЗ
                userRow.forEach((cell, index) => {
                    const headerText = header[index] || 'ржбрзЗржЯрж╛';
                    const cellValue = cell || 'ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржпрж╝ржирж┐';

                    // ржЯрж╛ржЗржорж╕рзНржЯрзНржпрж╛ржорзНржк, рж╕рзНржХрзЛрж░, ржирж╛ржо, ржЗржорзЗржЗрж▓ ржПржЗ ржкрзНрж░ржержо ржЪрж╛рж░ржЯрж┐ ржХрж▓рж╛ржо рж╣рж╛ржЗрж▓рж╛ржЗржЯ ржХрж░ржмрзЗ
                    if (index < 4) { 
                        html += `<li><strong>${headerText}:</strong> <span style="font-weight: 600; color: #0b509d;">${cellValue}</span></li>`;
                    } 
                    // ржкрзНрж░рж╢рзНржи ржУ ржЙрждрзНрждрж░ржЧрзБрж▓рзЛ ржПржХржЯрж┐ ржнрж┐ржирзНржи ржлрж░ржорзЗржЯрзЗ ржжрзЗржЦрж╛ржмрзЗ
                    else if (index >= 7) { 
                          html += `<li><strong>${headerText}:</strong> ${cellValue}</li>`;
                    }
                });
                html += '</ul>';
                personalContainer.innerHTML = html;
            } else {
                personalContainer.innerHTML = "<p style='color: orange;'>ржПржЗ ржирж╛ржо ржмрж╛ ржлрзЛржи ржиржорзНржмрж░ ржжрж┐ржпрж╝рзЗ ржХрзЛржирзЛ ржлрж▓рж╛ржлрж▓ ржЦрзБржБржЬрзЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред</p>";
            }
        })
        .catch(error => {
            console.error("Error loading personal data:", error);
            personalContainer.innerHTML = `<p style="color: red;">ржлрж▓рж╛ржлрж▓ рж▓рзЛржб ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ API рж╕рзЗржЯрж┐ржВ ржЪрзЗржХ ржХрж░рзБржи: ${error.message}</p>`;
        });
}