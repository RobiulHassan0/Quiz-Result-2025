

function fetchPersonalResult() {
    const participantId = document.getElementById('participantId').value.trim();
    const personalContainer = document.getElementById('personal-data-container');

    // ... (ржкрзВрж░рзНржмрзЗрж░ ржЖржЗржбрж┐ ржПржмржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЪрзЗржХрж┐ржВ ржХрзЛржб ржЕржкрж░рж┐ржмрж░рзНрждрж┐ржд ржерж╛ржХржмрзЗ)
    if (!participantId || typeof SHEET_ID === 'undefined' || typeof API_KEY === 'undefined') {
         personalContainer.innerHTML = '<p style="color: orange;">ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржкржирж╛рж░ ржЖржЗржбрж┐ (ржЗржорзЗржЗрж▓) ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи ржПржмржВ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЪрзЗржХ ржХрж░рзБржиред</p>';
         return;
    }
    personalContainer.innerHTML = '<p>ржлрж▓рж╛ржлрж▓ ржЦрзЛржБржЬрж╛ рж╣ржЪрзНржЫрзЗ...</p>';
    
    // URL рждрзИрж░рж┐
    const encodedRange = encodeURIComponent(SHEET_NAME) + '!' + API_RANGE;
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodedRange}?key=${API_KEY}`;
    
    fetch(url)
        .then(response => response.json())
        .then(data => {
            const allRows = data.values;
            if (!allRows || allRows.length <= 1) {
                personalContainer.innerHTML = "<p>ржХрзЛржирзЛ ржбрзЗржЯрж╛ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред</p>";
                return;
            }
            
            const header = allRows[0];
            const emailColumnIndex = 1; // B ржХрж▓рж╛ржорзЗ (ржЗржиржбрзЗржХрзНрж╕ 1) ржЗржорзЗржЗрж▓ ржЖржЫрзЗ
            
            // ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАржХрзЗ ржЗржорзЗржЗрж▓ ржЕрзНржпрж╛ржбрзНрж░рзЗрж╕ ржжрж┐ржпрж╝рзЗ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рж╛
            const userRow = allRows.find((row, index) => {
                return index > 0 && (row[emailColumnIndex] || '').trim().toLowerCase() === participantId.toLowerCase();
            });

            if (userRow) {
                let html = '<h3>ржЖржкржирж╛рж░ ржлрж▓рж╛ржлрж▓ ржУ ржЙрждрзНрждрж░ржкрждрзНрж░ ЁЯУД</h3><ul class="personal-details-list">';
                
                // рж╕ржорж╕рзНржд ржХрж▓рж╛ржо ржбрзЗржЯрж╛ ржжрзЗржЦрж╛ржмрзЗ
                userRow.forEach((cell, index) => {
                    const headerText = header[index] || 'ржбрзЗржЯрж╛';
                    const cellValue = cell || 'ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржпрж╝ржирж┐';

                    // ржЯрж╛ржЗржорж╕рзНржЯрзНржпрж╛ржорзНржк, рж╕рзНржХрзЛрж░, ржирж╛ржо, ржЗржорзЗржЗрж▓ ржПржЗ ржкрзНрж░ржержо ржЪрж╛рж░ржЯрж┐ ржХрж▓рж╛ржо рж╣рж╛ржЗрж▓рж╛ржЗржЯ ржХрж░ржмрзЗ
                    if (index < 4) { 
                        html += `<li><strong>${headerText}:</strong> <span style="font-weight: 600; color: #0b509d;">${cellValue}</span></li>`;
                    } 
                    // ржкрзНрж░рж╢рзНржи ржУ ржЙрждрзНрждрж░ржЧрзБрж▓рзЛ ржПржХржЯрж┐ ржнрж┐ржирзНржи ржлрж░ржорзЗржЯрзЗ ржжрзЗржЦрж╛ржмрзЗ
                    else if (index >= 7) { 
                         html += `<li><strong>${headerText}:</strong> ${cellValue}</li>`;
                    }
                });
                html += '</ul>';
                personalContainer.innerHTML = html;
            } else {
                personalContainer.innerHTML = "<p style='color: orange;'>ржПржЗ ржЗржорзЗржЗрж▓ ржЕрзНржпрж╛ржбрзНрж░рзЗрж╕ ржжрж┐ржпрж╝рзЗ ржХрзЛржирзЛ ржлрж▓рж╛ржлрж▓ ржЦрзБржБржЬрзЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред ржЗржорзЗржЗрж▓ржЯрж┐ рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрзНрж░ржмрзЗрж╢ ржХрж░рж┐ржпрж╝рзЗржЫрзЗржи ржХрж┐ржирж╛ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржиред</p>";
            }
        })
        .catch(error => {
            console.error("Error loading personal data:", error);
            personalContainer.innerHTML = `<p style="color: red;">ржлрж▓рж╛ржлрж▓ рж▓рзЛржб ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ API рж╕рзЗржЯрж┐ржВ ржУ ржЗржорзЗржЗрж▓ ржарж┐ржХ ржЖржЫрзЗ ржХрж┐ржирж╛ ржжрзЗржЦрзБржи: ${error.message}</p>`;
        });
}